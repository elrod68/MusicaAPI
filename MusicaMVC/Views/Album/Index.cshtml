@model IEnumerable<Album>
@{ Layout = "_Layout"; ViewBag.Title = "All Albums";}

<script language="javascript">


    function DoPost(num) {
        var grid = new MvcGrid(document.querySelector('.mvc-grid'));
        //alert(grid.name);
        $.post("Album/DeleteAlbum/", { ID: num });
        //grid.reload();
        alert("Album deleted");
        location.reload();
   }

</script>

<h2>Customers</h2>
<a asp-action="AddAlbum" class="btn btn-sm btn-primary">Add Album</a>
<a asp-action="GetAlbum" class="btn btn-sm btn-secondary">Get Album</a>

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        //<a href="/Album/UpdateAlbum/1">
        columns.Add(model => "<a href=\"/Album/UpdateAlbum/" + model.ID + "\"> <img src=\"/icon/edit.png\" /> </a>").Encoded(false);

        columns.Add(model => model.ID).Titled("ID");
        columns.Add(model => model.AlbumName).Titled("Name");
        columns.Add(model => model.ArtistName).Titled("Artist");
        columns.Add(model => model.AlbumLabel).Titled("Label");
        columns.Add(model => model.AlbumTypeDescr).Titled("Type");
        columns.Add(model => model.AlbumStock).Titled("Stock");

        columns.Add(model => "<a href=\"javascript: DoPost(" + model.ID + ")\"><img src=\"/icon/remove.png\" /> </a>").Encoded(false);
    })
    .Id("mvcGrid")
    .Using(GridFilterMode.Header)
    .Empty("No data found")
    .Filterable()
    .Sortable()
    .Pageable(pager =>
    {
        pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { @Startup.albumPageSize, @Startup.albumPageSize.ToString()} };
        pager.ShowPageSizes = true;
        pager.CurrentPage = 1;
        pager.RowsPerPage = @Startup.albumPageSize;
    })
)
